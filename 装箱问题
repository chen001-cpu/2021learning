假设有N项物品，大小分别为s1、s2、…、si、…、sN，其中si 为满足1≤si≤100的整数。要把这些物品装入到容量为100的一批箱子（序号1-N）中
装箱方法是：对每项物品, 顺序扫描箱子，把该物品放入足以能够容下它的第一个箱子中。请写一个程序模拟这种装箱过程，并输出每个物品所在的箱子序号，以及放置全部物品所需的箱子数目。
输入格式：
输入第一行给出物品个数N（≤1000）；第二行给出N个正整数si（1≤si≤100，表示第i项物品的大小）。

输出格式：
按照输入顺序输出每个物品的大小及其所在的箱子序号，每个物品占1行，最后一行输出所需的箱子数目。

输入样例：
8
60 70 80 90 30 40 10 20

输出样例：
60 1
70 2
80 3
90 4
30 1
40 5
10 1
20 2
5
--------------------------------------
修改如下（完结）
#include<stdio.h>
int main()
{
	int n,a[1000],b[1000]={0},i,j,s=1,flag=0;//a代表货物，b代表箱子，s代表箱子数量 
	scanf("%d",&n);
	for(i=0;i<n;i++)
	scanf("%d",&a[i]);
	for(i=0;i<n;i++)//开始装货 
	{
		flag=0;
		for(j=1;j<=s;j++)  //对每次的箱子从头开始循环 
		{
			if((100-b[j])>a[i]||(100-b[j])==a[i]) //若这个箱子的剩余储存空间大于该货，就存起来 
			{
				printf("%d %d\n",a[i],j);
				b[j]=b[j]+a[i];   //把该货物放到该箱子里去 
				flag=1;  //标志 
				break;//一旦装进前面的箱子，结束循环，开始下一个货物 
			}
		}
		if(flag==0)//如果之前所有的箱子都没有空间装这个货，就找个新箱子 
		{
			s++;//新箱子 
			b[s]=a[i];//装货 
			printf("%d %d\n",a[i],s);
		}
	}
	printf("%d\n",s);//总的箱子 
	return 0;
 } 
