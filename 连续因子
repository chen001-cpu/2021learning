一个正整数 N 的因子中可能存在若干连续的数字。例如 630 可以分解为 3×5×6×7，其中 5、6、7 就是 3 个连续的数字。给定任一正整数 N，要求编写程序求出最长连续因子的个数，并输出最小的连续因子序列。

输入格式：
输入在一行中给出一个正整数 N（1<N<2的31次方）。

输出格式：
首先在第 1 行输出最长连续因子的个数；然后在第 2 行中按 因子1*因子2*……*因子k 的格式输出最小的连续因子序列，其中因子按递增顺序输出，1 不算在内。

输入样例：
630
输出样例：
3
5*6*7
----------------------------------------
#include<stdlib.h>
#include<math.h>
int main()
{
    int n,i,j,a=0,s=0,sum,f=0,t=0;
    scanf("%d",&n);
    for(i=2;i<=sqrt(n);i++)   //必须要开方，不然会运算超时
    {
        sum=1;t=0;f=i;
        for(j=i;n%j==0&&n%(sum*j)==0;j++)
        {
            t++;
            sum=sum*j;
        }
        if(t>s)
        {
            a=f;s=t;
        }
    }
    if(s==0)
        printf("%d\n%d\n",1,n);
    else
    {
        printf("%d\n",s);
        for(i=a;i<a+s-1;i++)
        {
            printf("%d*",i);
        }
        printf("%d\n",i);
    }
    return 0;
}
